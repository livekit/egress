# Copyright 2023 LiveKit, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Integration Test
on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths:
      - build/chrome/**
      - build/egress/**
      - build/gstreamer/**
      - build/test/**
      - cmd/**
      - pkg/**
      - test/**
      - go.mod

jobs:
  build:
    runs-on: buildjet-8vcpu-ubuntu-2204
    outputs:
      image: ${{ steps.docker-md.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
            ~/.cache
          key: egress-integration-${{ hashFiles('**/go.sum') }}
          restore-keys: egress-integration

      - name: Docker metadata
        id: docker-md
        uses: docker/metadata-action@v5
        with:
          images: livekit/egress-integration
          tags: |
            type=sha

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.1

      - name: Download Go modules
        run: go mod download

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build/test/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.docker-md.outputs.tags }}
          labels: ${{ steps.docker-md.outputs.labels }}

  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        integration_type: [file, stream, segments, images, multi, edge]
    runs-on: buildjet-8vcpu-ubuntu-2204
    steps:
      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '6.x'
          auto-start: true
      - run: redis-cli ping

      - name: Run tests
        env:
          IMAGE: ${{needs.build.outputs.image}}
        run: |
          docker run --rm \
            --network host \
            -e GITHUB_WORKFLOW=1 \
            -e EGRESS_CONFIG_STRING="$(echo ${{ secrets.EGRESS_CONFIG_STRING }} | base64 -d)" \
            -e INTEGRATION_TYPE="${{ matrix.integration_type }}" \
            -e S3_UPLOAD="$(echo ${{ secrets.S3_UPLOAD }} | base64 -d)" \
            -e GCP_UPLOAD="$(echo ${{ secrets.GCP_UPLOAD }} | base64 -d)" \
            ${{ env.IMAGE }}
